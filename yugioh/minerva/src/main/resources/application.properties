spring.application.name=minerva

eureka.instance.hostname=${spring.cloud.client.ip-address}

server.port=10201

logging.config=classpath:log4j2.xml

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/minerva?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.hikari.maximum-pool-size=9
spring.datasource.hikari.minimum-idle=1
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create

spring.rabbitmq.port=5672
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.cloud.stream.instanceCount=1
spring.cloud.stream.instanceIndex=0

spring.cloud.stream.function.definition=DataStormReceiver;
spring.cloud.stream.bindings.DataStormReceiver-in-0.destination=data-storm-in-0
spring.cloud.stream.bindings.DataStormReceiver-in-0.group=data-storm-group
spring.cloud.stream.rabbit.bindings.DataStormReceiver-in-0.consumer.acknowledge-mode=manual
spring.cloud.stream.rabbit.bindings.DataStormReceiver-in-0.consumer.prefetch=2

#eureka.client.serviceUrl.defaultZone=http://ygo:ygo@172.17.237.151:9000/eureka/
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:9000/eureka/
# 首次注册行为是和首次心跳绑定在一起的，首次心跳发送以后会收到not found的响应,client就知道还没注册过，client就会1s后注册.
eureka.client.initial-instance-info-replication-interval-seconds=1
# 心跳间隔5秒
eureka.instance.lease-renewal-interval-in-seconds=5
# 10秒没有心跳的淘汰时间
eureka.instance.lease-expiration-duration-in-seconds=10
# 每隔5秒刷新本地缓存
eureka.client.registry-fetch-interval-seconds=5
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}

data-storm.thread.worker-size=2
data-storm.thread.queue-size=10

spring.elasticsearch.rest.uris=http://127.0.0.1:9200

#spring.redis.host=localhost
#spring.redis.port=6379
##spring.redis.password=root
## 连接池最大连接数(使用负值表示没有限制) 默认为8
#spring.redis.lettuce.pool.max-active=8
## 连接池最大阻塞等待时间(使用负值表示没有限制) 默认为-1
#spring.redis.lettuce.pool.max-wait=-1ms
## 连接池中的最大空闲连接 默认为8
#spring.redis.lettuce.pool.max-idle=8
## 连接池中的最小空闲连接 默认为 0
#spring.redis.lettuce.pool.min-idle=0