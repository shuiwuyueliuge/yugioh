spring.application.name=hermes

server.port=10101

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/postman?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.hikari.maximum-pool-size=9
spring.datasource.hikari.minimum-idle=1
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create

spring.rabbitmq.port=5672
spring.rabbitmq.host=172.18.13.72
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.cloud.stream.bindings.card-meta.destination=card-meta-event
spring.cloud.stream.bindings.card-meta.group=card-meta-group
#通过该参数指定了分区键的表达式规则
spring.cloud.stream.bindings.card-meta.producer.partitionKeyExpression=payload.routingKey
#指定了消息分区的数量。
spring.cloud.stream.bindings.card-meta.producer.partitionCount=1

spring.cloud.stream.bindings.include-meta.destination=include-meta-event
spring.cloud.stream.bindings.include-meta.group=include-meta-group
spring.cloud.stream.bindings.include-meta.producer.partitionKeyExpression=payload.routingKey
spring.cloud.stream.bindings.include-meta.producer.partitionCount=1

spring.cloud.stream.bindings.card-create.destination=card-create-event
spring.cloud.stream.bindings.card-create.group=card-create-group
#通过该参数指定了分区键的表达式规则
spring.cloud.stream.bindings.card-create.producer.partitionKeyExpression=payload.routingKey
#指定了消息分区的数量。
spring.cloud.stream.bindings.card-create.producer.partitionCount=1

spring.cloud.stream.bindings.msg.destination=msg-event
spring.cloud.stream.bindings.msg.group=msg-group
#通过该参数指定了分区键的表达式规则
spring.cloud.stream.bindings.msg.producer.partitionKeyExpression=payload.routingKey
#指定了消息分区的数量。
spring.cloud.stream.bindings.msg.producer.partitionCount=1

event.exec.corn=*/1 * * * * ?

#eureka.client.serviceUrl.defaultZone=http://ygo:ygo@172.17.237.151:9000/eureka/
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:9000/eureka/
eureka.instance.lease-renewal-interval-in-seconds=1
eureka.instance.lease-expiration-duration-in-seconds=2
eureka.client.registry-fetch-interval-seconds=5